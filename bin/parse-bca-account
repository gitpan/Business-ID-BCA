#!perl

# Note: This script is a CLI interface to Riap function /Business/ID/BCA/parse_bca_account
# and generated automatically using Dist::Zilla::Plugin::Rinci::ScriptFromFunc version 0.01

our $DATE = '2014-08-16'; # DATE
our $VERSION = '0.05'; # VERSION

use 5.010001;
use strict;
use warnings;

use Perinci::CmdLine::Any -prefer_lite=>1;

Perinci::CmdLine::Any->new(
    url => "/Business/ID/BCA/parse_bca_account",
)->run;

# ABSTRACT: Parse/validate BCA account number
# PODNAME: parse-bca-account

__END__

=pod

=encoding UTF-8

=head1 NAME

parse-bca-account - Parse/validate BCA account number

=head1 VERSION

This document describes version 0.05 of parse-bca-account (from Perl distribution Business-ID-BCA), released on 2014-08-16.

=head1 SYNOPSIS

Usage:

 % parse-bca-account

Examples:

 TODO

To see all options:

 % parse-bca-account --help

=head1 DESCRIPTION

Upon success/valid number, return status 200 with hash containing parsed
information. Upon invalid number, return 400. Parsed information contains these
keys:

=over

=item * C<branch_code>

=item * C<branch_name>

=item * C<branch_city_name> (not yet)

=item * C<branch_city_code> (not yet)

=item * C<account> (10-digits)

=item * C<account_f> (canonically-formatted account number, e.g. 123.456789.0)

=item * C<is_checking> (bool, true if detected as checking account [giro])

=item * C<check_digit>

=back

=head1 OPTIONS

 TODO

=head1 HOMEPAGE

Please visit the project's homepage at L<https://metacpan.org/release/Business-ID-BCA>.

=head1 SOURCE

Source repository is at L<https://github.com/sharyanto/perl-Business-ID-BCA>.

=head1 BUGS

Please report any bugs or feature requests on the bugtracker website L<https://rt.cpan.org/Public/Dist/Display.html?Name=Business-ID-BCA>

When submitting a bug or request, please include a test-file or a
patch to an existing test-file that illustrates the bug or desired
feature.

=head1 AUTHOR

Steven Haryanto <stevenharyanto@gmail.com>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2014 by Steven Haryanto.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut
